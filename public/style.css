@import url('https://fonts.googleapis.com/css?family=Exo:400,700');

*{
    margin: 0px;
    padding: 0px;
}

html, body {
    background: #c64d65;  
    background: linear-gradient(45deg, #c64d65, #c64d8a);  
    font-family: 'Exo', sans-serif;
}

button {
    cursor: pointer;
}

.title, .footer {
    position: absolute;
    margin: auto;
    padding: 4em;
    border-radius: 24px; 
    z-index: 10;
    text-align: center;
    color: #ffffff; 
    text-transform: uppercase;
}

.title {
    top:0;
}

.footer {
    bottom: 0;
    padding: 0;
    margin-bottom: 1em;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    min-height: 100%;
}

.context {
    height: 60vh;
    margin: auto;
    justify-content: center;
    width: 70vw;
    padding: 4em;
    border-radius: 24px; 
    z-index: 10;
    text-align: center;
    color: #ffffff; 
    text-transform: uppercase;
    overflow-x: hidden;
}

.context h1 {
    font-size: 50px;
}
.context h2 {
    font-size: 40px;
}

.context .menuButton, .context input, .displayButton {
    font-family: 'Exo', sans-serif;
    text-transform: uppercase;
    font-size: 40px;
    color: #c64d65;
    font-weight: bold;

    margin-top: 30px;
    width: 100%;
    
    background-color: #ffffff;
    border-color: #ffffff;
    border-width: 8px;
    border-radius: 24px;
    border-style: solid;

    transition: 0.3s;
}

/* Button */

.displayButton:disabled {
    background-color: #ffffffa0;
    border-color: #ffffff00;
    cursor:not-allowed;
}

.context button:hover:not(:disabled), .context input:hover:not(:disabled), .card:hover {
    transform: scale(1.1);
}

.card.disabled {
    cursor:text;
    transform: scale(1);
}

.context button.invertsquare {
    color: #ffffff;
    background-color: transparent;
    width: 64px;
    border-radius: 18px;
    height: 64px;
}

.context button .hoverSwipe {
    transition: margin 0.1s;
    margin-right: 8px;
    margin-left: 16px;
}

.context button:hover .hoverSwipe {
    margin-right: -8px;
    margin-left: 32px;
}

.context .buttons:not(.active) {
    display: none;
}

.context .buttons.active, .context .display.active, .context .displayGrid.active {
    animation: fadeRight;
    animation-duration: 0.4s;
}

@keyframes fadeRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Grid */

.grid {
    height: 40px;
    margin-top: 30px;
    margin: auto;
    display: grid;
    grid-template: '1 2' ;
}

.grid input {
    width: 87%;
}

.grid h2 {
    width: 90%;
    line-height: 118px;
}

/* CARDS SECTION */

.cardGrid {
    width: 100%;
    height: 100%;
}

.displayGrid {
    display: grid;
    gap: 1em;
    width: 100%;
    height: 100%;
    overflow: visible;
    padding-right: 4em;
    margin-bottom: 10vh;
}

#dateGrid {
    grid-template-rows: repeat(4, 1fr);
}

.middle {
    width: min(80vw,480px);
}

.card {
    width: 84%;
    min-height: 10vh;
    padding: 7.5%;
    border-radius: 24px;
    font-weight: bold;
    text-align: left;
    font-size: 1.5em;
    transition: 0.3s;
    cursor: pointer;
}

.perkCard {color:#fc0536;background-color: #ffffff;}
.flagCard {color:#ffffff;background-color: #fc0536;}
.dateCard {color:#fc0536;background-color: #ffffff;}

button:has(> .card) {
    border-width: 0;
    background-color: transparent;
    font-family: 'Exo', sans-serif;
}

.cardGrid .gameDisplay:not(.active) {
    display: none;
}

.selected {
    box-shadow: 0 0 5px 7px rgba(255,215,0,0.75);
}

/* FLAG MODAL */

.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1000; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

  /* Modal Content/Box */
.modal-content {
    top: 15vh;
    height: 50vh;
    position: absolute;
    margin: auto;
    justify-content: center;
    width: 70vw;
    padding: 7vw;
    left:8vw;
    border-radius: 24px; 
    z-index: 10;
    text-align: center;
    color: #ffffff;
    background-color: #c64d8a;
    text-transform: uppercase;
}
  
  /* The Close Button */
.close {
    color: #aaa;
    float: right;
    font-size: 5em;
    margin-top: -0.4em;
    font-weight: bold;
}
  
.close:hover, .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* DISPLAY */

.qrcode {
    height: 200px;
    image-rendering: -moz-crisp-edges; 
    image-rendering: pixelated; 
    float: right;
    padding-right: 6em;
}

.playersGrid {
    display: grid;
    grid-template: '1 2' '3 4';
    grid-template-rows: repeat(2, 1fr);
    grid-template-columns: repeat(4, 1fr);
    position: relative;
    bottom: 0;
    font-size: 1vw;
}

.centred {
    text-align: center;
}

.settingsGrid {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(4, 1fr);
}

.settingsButton {
    position: absolute;
    top:0;
    right:0;
    background-color: #ffffff00;
    border: none;
    z-index: 50;
    transition: 0.5s;
}

.settingsButton:hover {
    transform: rotate(90deg);
}

.settingsButton svg {
    width: 50px;
    height: 50px;
    padding: 1em;
}

/* .startGame {
    margin:  auto 0 auto;
} */

.context .display:not(.active) {
    display: none;
}

.context .display.perks {
    height: 100%;
}

.flagDisplayGrid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(1, 1fr);
    height: 40vh;
}
/* https://www.w3schools.com/howto/howto_custom_select.asp */
.custom-select {
    position: relative;
    font-size: 22px;
  }
  
  .custom-select select {
    display: none; /*hide original SELECT element: */
  }
  
  .select-selected {
    background-color: DodgerBlue;
  }
  
  /* Style the arrow inside the select element: */
  .select-selected:after {
    position: absolute;
    content: "";
    top: 48px;
    right: 10px;
    width: 0;
    height: 0;
    border: 6px solid transparent;
    border-color: #fff transparent transparent transparent;
  }
  
  /* Point the arrow upwards when the select box is open (active): */
  .select-selected.select-arrow-active:after {
    border-color: transparent transparent #fff transparent;
    top: 7px;
  }
  
  /* style the items (options), including the selected item: */
  .select-items div,.select-selected {
    color: #ffffff;
    padding: 8px 16px;
    border: 1px solid transparent;
    border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
    cursor: pointer;
  }
  
  /* Style items (options): */
  .select-items {
    position: absolute;
    background-color: DodgerBlue;
    top: 100%;
    left: 0;
    right: 0;
    z-index: 999999;
  }
  
  /* Hide the items when the select box is closed: */
  .select-hide {
    display: none;
  }
  
  .select-items div:hover, .same-as-selected {
    background-color: rgba(0, 0, 0, 0.1);
  } 

/* BACKGROUND */

.area{
    float:left;
    background: #c64d65;  
    background: linear-gradient(45deg, #c64d65, #c64d8a);  
    width: 100%;
}

.circles{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    min-height: 100%;
    overflow: hidden;
}

.circles li{
    position: absolute;
    display: block;
    list-style: none;
    width: 20px;
    height: 20px;
    background: rgba(255, 255, 255, 0.2);
    animation: animate 25s linear infinite;
    bottom: -150px;
    z-index: 1;
}

.circles li:nth-child(1){
    left: 25%;
    width: 80px;
    height: 80px;
    animation-delay: 0s;
    transform: scale(0.9);
}


.circles li:nth-child(2){
    left: 10%;
    width: 20px;
    height: 20px;
    animation-delay: 2s;
    animation-duration: 12s;
    transform: scale(1.1);
}

.circles li:nth-child(3){
    left: 70%;
    width: 20px;
    height: 20px;
    animation-delay: 4s;
    transform: scale(0.8);
}

.circles li:nth-child(4){
    left: 40%;
    width: 60px;
    height: 60px;
    animation-delay: 0s;
    animation-duration: 18s;
    transform: scale(1.3);
}

.circles li:nth-child(5){
    left: 65%;
    width: 20px;
    height: 20px;
    animation-delay: 0s;
}

.circles li:nth-child(6){
    left: 75%;
    width: 110px;
    height: 110px;
    animation-delay: 3s;
    transform: scale(1.2);
}

.circles li:nth-child(7){
    left: 35%;
    width: 150px;
    height: 150px;
    animation-delay: 7s;
    transform: scale(0.6);
}

.circles li:nth-child(8){
    left: 50%;
    width: 25px;
    height: 25px;
    animation-delay: 15s;
    animation-duration: 45s;
    transform: scale(0.1);
}

.circles li:nth-child(9){
    left: 20%;
    width: 15px;
    height: 15px;
    animation-delay: 2s;
    animation-duration: 35s;
    transform: scale(0.7);
}

.circles li:nth-child(10){
    left: 85%;
    width: 150px;
    height: 150px;
    animation-delay: 0.5s;
    animation-duration: 11s;
    transform: scale(1);
}


@keyframes animate {

    0%{
        transform: translateY(0) rotate(0deg);
        opacity: 1;
        border-radius: 0;
    }

    100%{
        transform: translateY(-1000px) rotate(720deg) scale(1);
        opacity: 0;
        border-radius: 50%;
    }

}

/* DESKTOP */
@media only screen and (max-width: 600px) {
    .displayButton:disabled {
        display: none;
    }
} 

@media only screen and (min-width: 768px) {
    .displayGrid:not(.playersGrid) {
        grid-template: '1 2' '3 4';
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(2, 1fr);
    }
    
    .context {
        width: 40%;
    }

    .context button, .context input{
        width: 89%;
    }
    
    /* .grid {
        width: %;
    } */

    .grid h2 {
        font-size: 3em;
    }

    .grid input {
        width: 87%;
    }

    .card {
        padding: 0.5em;
        font-size: 1.8em;
        height: 80%;
        width: 90%;
    }

    .modal .footerButton {
        position: absolute;
        left: 20%;
        bottom: 6vh;
        width: 60%;
    }
}